{
  "status": "success",
  "ats_name": "pinpoint",
  "data": [
    {
      "dataModel": "APPLICATION",
      "integrationType": "WRITE_REST_API",
      "integrations": [
        {
          "type": "WriteApiIntegration",
          "integrationId": "pinpoint-application-post-start-chain",
          "responseConfig": {
            "responseType": "SINGLE_ENTITY",
            "jsonataExpression": "$",
            "resPassingJsonataExpression": null
          },
          "dataModelRules": [
            {
              "type": "BooleanExpressionRule",
              "jsonataExpression": "true"
            }
          ],
          "dataModelTarget": null,
          "integrationDependency": null,
          "failSilently": true,
          "method": "POST",
          "authTypes": [
            "API_KEY"
          ],
          "apiPath": "https://joveo-sandbox.pinpointhq.com",
          "headers": {},
          "queryParams": {},
          "contentType": "APPLICATION_JSON",
          "requestPayload": {
            "requestBody": "",
            "requestBodyConverter": []
          },
          "responseHandlers": [
            {
              "statusCode": 0,
              "bodyRules": [
                {
                  "type": "BooleanExpressionRule",
                  "jsonataExpression": "true"
                }
              ],
              "jsonataConvertorExpression": "{\"errorMessage\": \"Integration not executed because this is dummy integration to support dependency fields for next integration.\"}"
            }
          ],
          "headersInResponse": false,
          "executionEligibilityRules": [
            {
              "type": "BooleanExpressionRule",
              "jsonataExpression": "false"
            }
          ]
        },
        {
          "type": "WriteApiIntegration",
          "integrationId": "pinpoint-candidate-application-submission",
          "responseConfig": {
            "responseType": "SINGLE_ENTITY",
            "jsonataExpression": "$",
            "resPassingJsonataExpression": null
          },
          "dataModelRules": [
            {
              "type": "BooleanExpressionRule",
              "jsonataExpression": "$exists(inputData.application.atsJobId) and inputData.application.atsJobId!= null and $exists(inputData.candidate.firstName) and inputData.candidate.firstName!= null and $exists(inputData.candidate.lastName) and inputData.candidate.lastName!= null and $exists(inputData.candidate.email) and inputData.candidate.email!= null and $exists(inputData.candidate.phoneNumber) and inputData.candidate.phoneNumber!= null and $exists(inputData.application.attachment.attachmentContent) and inputData.application.attachment.attachmentContent!= null and $exists(inputData.application.attachment.attachmentFileName) and inputData.application.attachment.attachmentFileName!= null"
            }
          ],
          "dataModelTarget": null,
          "integrationDependency": {
            "dependentIntegrationId": "pinpoint-application-post-start-chain",
            "dependencyFields": [
              {
                "type": "RestApiIntegrationField",
                "targetField": "firstName",
                "jsonataExpression": "inputData.candidate.firstName",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "lastName",
                "jsonataExpression": "inputData.candidate.lastName",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "email",
                "jsonataExpression": "inputData.candidate.email",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "phoneNumber",
                "jsonataExpression": "inputData.candidate.phoneNumber",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "fileName",
                "jsonataExpression": "inputData.application.attachment.attachmentFileName",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "content",
                "jsonataExpression": "inputData.application.attachment.attachmentContent",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "jobId",
                "jsonataExpression": "inputData.application.atsJobId",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              },
              {
                "type": "RestApiIntegrationField",
                "targetField": "source",
                "jsonataExpression": "inputData.candidate.customFields.source",
                "restApiIntegrationContext": "API_REQUEST_BODY"
              }
            ],
            "jsonDataType": "TEXT_PRIMITIVE",
            "queryType": "SINGLE_ENTITY"
          },
          "failSilently": false,
          "method": "POST",
          "authTypes": [
            "API_KEY"
          ],
          "apiPath": "/api/v1/applications",
          "headers": {},
          "queryParams": {},
          "contentType": "APPLICATION_JSON",
          "requestPayload": {
            "requestBody": {
              "data": {
                "relationships": {
                  "job": {
                    "data": {
                      "id": "${jobId}",
                      "type": "jobs"
                    }
                  }
                },
                "attributes": {
                  "phone": "${phoneNumber}",
                  "channel_source": "${source}",
                  "channel": "other",
                  "last_name": "${lastName}",
                  "first_name": "${firstName}",
                  "email": "${email}",
                  "cv_base64_data": "data:application/pdf;base64,${content}",
                  "cv_base64_filename": "${fileName}"
                },
                "type": "applications"
              }
            },
            "requestBodyConverter": []
          },
          "responseHandlers": [
            {
              "statusCode": 201,
              "bodyRules": [
                {
                  "type": "BooleanExpressionRule",
                  "jsonataExpression": "true"
                }
              ],
              "jsonataConvertorExpression": "{\"applicationId\":data.id}"
            },
            {
              "statusCode": 400,
              "bodyRules": [
                {
                  "type": "BooleanExpressionRule",
                  "jsonataExpression": "true"
                }
              ],
              "jsonataConvertorExpression": "{\"errors\": $}"
            },
            {
              "statusCode": 0,
              "bodyRules": [
                {
                  "type": "BooleanExpressionRule",
                  "jsonataExpression": "true"
                }
              ],
              "jsonataConvertorExpression": "{\"errorMessage\": \"Integration not executed because data might be missing.\"}"
            }
          ],
          "headersInResponse": false,
          "executionEligibilityRules": [
            {
              "type": "BooleanExpressionRule",
              "jsonataExpression": "$exists(inputData.application.atsJobId) and inputData.application.atsJobId!= null and $exists(inputData.candidate.firstName) and inputData.candidate.firstName!= null and $exists(inputData.candidate.lastName) and inputData.candidate.lastName!= null and $exists(inputData.candidate.email) and inputData.candidate.email!= null and $exists(inputData.candidate.phoneNumber) and inputData.candidate.phoneNumber!= null and $exists(inputData.application.attachment.attachmentContent) and inputData.application.attachment.attachmentContent!= null and $exists(inputData.application.attachment.attachmentFileName) and inputData.application.attachment.attachmentFileName!= null"
            }
          ]
        }
      ]
    },
    {
      "dataModel": "APPLICATION",
      "integrationType": "WRITE_API_RESPONSE_HANDLER",
      "integrations": [
        {
          "type": "WriteApiIntegration",
          "integrationId": "pinpoint-application-api-response-handler-chain",
          "responseConfig": {
            "responseType": "SINGLE_ENTITY",
            "jsonataExpression": "$",
            "resPassingJsonataExpression": null
          },
          "dataModelRules": [
            {
              "type": "BooleanExpressionRule",
              "jsonataExpression": "true"
            }
          ],
          "dataModelTarget": null,
          "integrationDependency": null,
          "failSilently": false,
          "method": "POST",
          "authTypes": [
            "BASIC"
          ],
          "apiPath": "",
          "headers": {},
          "queryParams": {},
          "contentType": "APPLICATION_JSON",
          "requestPayload": {
            "requestBody": "",
            "requestBodyConverter": []
          },
          "responseHandlers": [
            {
              "statusCode": 0,
              "bodyRules": [
                {
                  "type": "BooleanExpressionRule",
                  "jsonataExpression": "true"
                }
              ],
              "jsonataConvertorExpression": "($applicationIdPost := ($exists(pinpoint_candidate_application_submission[0].applicationId)?pinpoint_candidate_application_submission[0].applicationId : null);$applicationIdPost!=null?{\"data\": {\"candidateId\": null, \"applicationId\": $applicationIdPost,\"customFields\": {}    },    \"errors\": null}:{\"data\": null,\"errors\": [{\"errorCode\": \"500\",\"errorType\": \"ERROR\",\"message\": $string($),\"params\": {}}]})"
            }
          ],
          "headersInResponse": false,
          "executionEligibilityRules": [
            {
              "type": "BooleanExpressionRule",
              "jsonataExpression": "false"
            }
          ]
        }
      ]
    }
  ],
  "status_code": 200
}