# ATS Integration File Structure

## File Organization
- All ATS integrations must be in `ats_integrations/` directory
- File naming: `{ats_name}_data_model_integrations.json`
- Integration IDs: `{ats}-{action}-{entity}` (e.g., `cornerstone-get-applications`)

## Data Model Structure
Each file contains an array of data model configurations:

```json
[
  {
    "dataModel": "JOB",
    "integrationType": "REST_API",
    "integrations": [...]
  },
  {
    "dataModel": "CANDIDATE", 
    "integrationType": "REST_API",
    "integrations": [...]
  },
  {
    "dataModel": "APPLICATION",
    "integrationType": "REST_API", 
    "integrations": [...]
  },
  {
    "dataModel": "APPLICATION_STAGE",
    "integrationType": "REST_API",
    "integrations": [...]
  },
  {
    "dataModel": "JOB_QUESTION",
    "integrationType": "REST_API",
    "integrations": [...]
  }
]
```

## Supported Data Models
- `JOB` - Job posting data with locations, departments, recruiters, hiring managers
- `CANDIDATE` - Candidate profile data with addresses, phone numbers, contact info
- `APPLICATION` - Job application data with status tracking and applied dates
- `APPLICATION_STAGE` - Application workflow stages with audit trails and status changes
- `JOB_QUESTION` - Job-specific questions, forms, screening questions, and consent forms

## Integration Types
- `REST_API` - Read operations from ATS (GET requests)
- `WRITE_REST_API` - Write operations to ATS (POST/PUT/PATCH)
- `WEBHOOK` - Real-time event processing
- `REST_API_RESPONSE_HANDLER` - Response processing for complex workflows
- `WRITE_API_RESPONSE_HANDLER` - Write operation response handling

## Integration Structure Patterns

### ReadApiIntegration Pattern
```json
{
  "type": "ReadApiIntegration",
  "integrationId": "ats-get-jobs",
  "responseConfig": {
    "responseType": "ARRAY_OF_ENTITIES",
    "jsonataExpression": "$.d.results"
  },
  "dataModelRules": [{"type": "BooleanExpressionRule", "jsonataExpression": "$count($$) > 0"}],
  "dataModelTarget": {
    "dataModelJsonataExpression": "$map($$, function($job) { ... })",
    "targetFields": ["JOVEO_JOB_ID", "ATS_JOB_ID"],
    "targetOperation": "UPSERT"
  },
  "method": "GET",
  "authTypes": ["API_KEY"],
  "apiPath": "/api/jobs",
  "headers": {"X-API-KEY": "{{api_key}}", "Content-Type": "application/json"},
  "queryParams": {"page": "${page}", "size": "100"},
  "paginationConfig": {"type": "PageConfig", "pageSize": 100},
  "dateRangeConfig": {
    "startDateTimeKey": "lastModifiedSince",
    "endDateTimeKey": "lastModifiedBefore", 
    "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
  }
}
```

### WriteApiIntegration Pattern
```json
{
  "type": "WriteApiIntegration",
  "integrationId": "ats-create-application",
  "responseConfig": {"responseType": "SINGLE_ENTITY", "jsonataExpression": "$"},
  "dataModelRules": [{"type": "BooleanExpressionRule", "jsonataExpression": "$exists(inputData.candidate.firstName)"}],
  "method": "POST",
  "authTypes": ["API_KEY"],
  "apiPath": "/api/applications",
  "headers": {"X-API-KEY": "{{api_key}}", "Content-Type": "application/json"},
  "requestPayload": {"requestBody": "{ ... }", "requestBodyConverter": []},
  "responseHandlers": [
    {"statusCode": 201, "bodyRules": [{"type": "BooleanExpressionRule", "jsonataExpression": "$exists(id)"}], "jsonataConvertorExpression": "{ \"applicationId\": id }"}
  ]
}
```

### Integration Dependency Pattern (for Looping)
```json
{
  "integrationDependency": {
    "dependentIntegrationId": "ats-get-applications-demo",
    "dependencyFields": [
      {
        "type": "RestApiIntegrationField",
        "targetField": "CurrentStatus",
        "jsonataExpression": ["New Submission", "In Review", "Phone Screening", "Interview", "Background Check", "Offer Letter", "Closed", "Hired"],
        "restApiIntegrationContext": "API_PATH"
      }
    ],
    "jsonDataType": "ARRAY_OF_PRIMITIVES",
    "queryType": "SINGLE_ENTITY"
  }
}
```

### Demo Integration Pattern
```json
{
  "type": "ReadApiIntegration",
  "integrationId": "ats-get-applications-demo",
  "responseConfig": {
    "responseType": "SINGLE_ENTITY",
    "jsonataExpression": "$"
  },
  "dataModelRules": [{"type": "BooleanExpressionRule", "jsonataExpression": "true"}],
  "dataModelTarget": null,
  "integrationDependency": null,
  "failSilently": true,
  "method": "GET",
  "authTypes": ["API_KEY"],
  "apiPath": "/api/jobs",
  "headers": {"X-API-KEY": "{{api_key}}", "Content-Type": "application/json"},
  "queryParams": {"PageSize": 1},
  "executionEligibilityRules": [{"type": "BooleanExpressionRule", "jsonataExpression": "true"}]
}
```

## Common Integration Patterns

### Job Integration
- Fetches job postings with locations, departments, recruiters
- Maps to JOB data model with comprehensive field mapping
- Supports pagination and date range filtering

### Candidate Integration  
- Fetches candidate profiles with contact information
- Maps to CANDIDATE data model with address and phone number arrays
- Handles custom fields for additional data

### Application Integration
- Fetches job applications with status tracking
- Maps to APPLICATION data model with applied dates
- Supports application creation via WriteApiIntegration

### Application Stage Integration
- Fetches application workflow stages with audit trails
- Maps to APPLICATION_STAGE data model with status changes
- Supports looping through multiple statuses

### Job Question Integration
- Fetches job-specific questions and forms
- Maps to JOB_QUESTION data model with complex question structures
- Handles screening questions, UCP questions, and consent forms

## Reference Files
- [cornerstone_data_model_integrations.json](mdc:ats_integrations/cornerstone_data_model_integrations.json) - Complete integration with all data models
- [SAP_data_model_integrations.json](mdc:ats_integrations/SAP_data_model_integrations.json) - Complex response handling patterns
- [pinpoint-new_data_model_integrations.json](mdc:ats_integrations/pinpoint-new_data_model_integrations.json) - Simple API integration
- [apploi_data_model_integrations.json](mdc:ats_integrations/apploi_data_model_integrations.json) - BASIC authentication pattern

---
globs: *.json
---
