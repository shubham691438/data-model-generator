# ATS Integration Pagination & Date Range

## Pagination Configuration

### PageConfig (Most Common)
```json
"paginationConfig": {
  "type": "PageConfig",
  "pageSize": 100,
  "pageNumberKey": "page",
  "hasMoreDataJsonataExpression": "$count(data) > 0"
}
```

### OffsetConfig
```json
"paginationConfig": {
  "type": "OffsetConfig",
  "limit": 100,
  "offsetKey": "offset",
  "hasMoreDataJsonataExpression": "$count(data) > 0"
}
```

### ExpressionConfig (SAP Pattern)
```json
"paginationConfig": {
  "type": "ExpressionConfig",
  "limitKey": "limit",
  "limitValue": 100,
  "jsonataExpressionMap": {
    "skipToken": "$exists($.d.__next)?$split($.d.__next,\"$skiptoken=\")[1]:\"\""
  },
  "paginationIndicatorJsonataExpression": "$exists($.d.__next)"
}
```

### Query Parameters
```json
"queryParams": {
  "page": "${page}",
  "size": "100",
  "limit": "${limit}",
  "offset": "${offset}",
  "$skiptoken": "${skipToken}",
  "customPageSize": "${customPageSize}",
  "$orderby": "lastModifiedDateTime desc",
  "paging": "snapshot",
  "$format": "json"
}
```

## Date Range Configuration

### Standard Date Range
```json
"dateRangeConfig": {
  "startDateTimeKey": "updated_after",
  "endDateTimeKey": "updated_before",
  "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
}
```

### Cornerstone Date Range
```json
"dateRangeConfig": {
  "startDateTimeKey": "lastModifiedSince",
  "endDateTimeKey": "lastModifiedBefore",
  "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
}
```

### SAP Date Range
```json
"dateRangeConfig": {
  "startDateTimeKey": "startDateTime",
  "endDateTimeKey": "endDateTime",
  "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
}
```

### Query Parameters with Date Range
```json
"queryParams": {
  "updated_before": "${updated_before}",
  "updated_after": "${updated_after}",
  "created_after": "${created_after}",
  "created_before": "${created_before}",
  "$filter": "lastModifiedDateTime gt '${startDateTime}' and lastModifiedDateTime lt '${endDateTime}' and boardId eq '_external'"
}
```

## Combined Configuration

### Standard Combined Config
```json
{
  "paginationConfig": {
    "type": "PageConfig",
    "pageSize": 100,
    "pageNumberKey": "page"
  },
  "dateRangeConfig": {
    "startDateTimeKey": "updated_after",
    "endDateTimeKey": "updated_before",
    "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
  },
  "queryParams": {
    "page": "${page}",
    "size": "100",
    "updated_before": "${updated_before}",
    "updated_after": "${updated_after}"
  }
}
```

### SAP Combined Config
```json
{
  "paginationConfig": {
    "type": "ExpressionConfig",
    "limitKey": "limit",
    "limitValue": 100,
    "jsonataExpressionMap": {
      "skipToken": "$exists($.d.__next)?$split($.d.__next,\"$skiptoken=\")[1]:\"\""
    },
    "paginationIndicatorJsonataExpression": "$exists($.d.__next)"
  },
  "dateRangeConfig": {
    "startDateTimeKey": "startDateTime",
    "endDateTimeKey": "endDateTime",
    "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
  },
  "queryParams": {
    "$filter": "lastModifiedDateTime gt '${startDateTime}' and lastModifiedDateTime lt '${endDateTime}'",
    "$skiptoken": "${skipToken}",
    "customPageSize": "${customPageSize}",
    "$orderby": "lastModifiedDateTime desc",
    "$expand": "jobRequisition/jobReqLocale,jobRequisition/filter3,jobRequisition/recruiter,jobRequisition/hiringManager",
    "paging": "snapshot",
    "$format": "json"
  }
}
```

## Date Formatting in JSONata

### Timezone Offset Removal
```jsonata
// Remove timezone offsets
$replace($date, /\\+\\d{2}:\\d{2}$/, "")

// Remove timezone offsets from various formats
$replace($replace($date, /\\+\\d{2}:\\d{2}$/, ""), /\\-\\d{2}:\\d{2}$/, "")
```

### Robust Date Parsing (MM/dd/yyyy to ISO)
```jsonata
// Handle various date formats with validation
$date != null and $date != "" and $date != "Incomplete" and $count($split($date, "/")) = 3 and $split($date, "/")[1] != "" and $split($date, "/")[2] != "" and $split($date, "/")[3] != "" and $number($split($date, "/")[1]) > 0 and $number($split($date, "/")[1]) <= 12 and $number($split($date, "/")[2]) > 0 and $number($split($date, "/")[2]) <= 31 and $number($split($date, "/")[3]) > 1900 ? $fromMillis($toMillis($split($date, "/")[3] & "-" & ($number($split($date, "/")[1]) < 10 ? "0" & $split($date, "/")[1] : $split($date, "/")[1]) & "-" & ($number($split($date, "/")[2]) < 10 ? "0" & $split($date, "/")[2] : $split($date, "/")[2]) & "T00:00:00Z")) : null
```

### SAP Date Parsing
```jsonata
// Parse SAP date format with validation
$fromMillis($number($substringBefore($substringAfter($string($date), "("), "+")))
```

### Format DateTime for API
```jsonata
// Format dates for API consumption
$formatDateTime($date, "[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")
```

## Common Patterns

### Incremental Sync
- Use `updated_after`/`updated_before` for incremental data sync
- Use `created_after`/`created_before` for initial data load
- Use `lastModifiedSince`/`lastModifiedBefore` for SAP-style APIs
- Set appropriate page sizes (50-200) based on API limits

### Performance Optimization
- Use smaller page sizes for faster initial response
- Use date ranges to limit data scope
- Implement proper error handling for pagination failures
- Use `$skiptoken` for efficient pagination
- Use `$expand` for related data fetching

### SAP-Specific Patterns
- Use `ExpressionConfig` for complex pagination
- Use `$filter` with date ranges
- Use `$expand` for related entities
- Use `paging: "snapshot"` for consistent results
- Use `$orderby` for consistent ordering

## Date Range Filtering Examples

### Standard Date Range
```json
"queryParams": {
  "updated_after": "${updated_after}",
  "updated_before": "${updated_before}"
}
```

### SAP Date Range with Filter
```json
"queryParams": {
  "$filter": "lastModifiedDateTime gt '${startDateTime}' and lastModifiedDateTime lt '${endDateTime}' and boardId eq '_external'"
}
```

### Cornerstone Date Range
```json
"queryParams": {
  "lastModifiedSince": "${lastModifiedSince}",
  "lastModifiedBefore": "${lastModifiedBefore}"
}
```

## Pagination Examples

### Standard Pagination
```json
"queryParams": {
  "page": "${page}",
  "size": "100"
}
```

### SAP Pagination
```json
"queryParams": {
  "$skiptoken": "${skipToken}",
  "customPageSize": "${customPageSize}",
  "$orderby": "lastModifiedDateTime desc"
}
```

### Offset Pagination
```json
"queryParams": {
  "limit": "${limit}",
  "offset": "${offset}"
}
```

## Error Handling for Pagination

### Missing Date Format
```json
// Add dateTimeFormat to prevent NullPointerException
"dateRangeConfig": {
  "startDateTimeKey": "startDateTime",
  "endDateTimeKey": "endDateTime",
  "dateTimeFormat": "yyyy-MM-dd'T'HH:mm:ss"
}
```

### Pagination Validation
```jsonata
// Validate pagination data exists
$exists($.d.__next) ? $split($.d.__next, "$skiptoken=")[1] : ""
```

## Reference Examples
- [SAP_data_model_integrations.json](mdc:ats_integrations/SAP_data_model_integrations.json) - Complex pagination with ExpressionConfig
- [cornerstone_data_model_integrations.json](mdc:ats_integrations/cornerstone_data_model_integrations.json) - Date range with lastModifiedSince
- [pinpoint-new_data_model_integrations.json](mdc:ats_integrations/pinpoint-new_data_model_integrations.json) - Simple pagination with PageConfig
- [apploi_data_model_integrations.json](mdc:ats_integrations/apploi_data_model_integrations.json) - Standard pagination patterns
description:
---
globs: *.json
---
